[{"/Users/khushisoni/mint-io/frontend/src/index.js":"1","/Users/khushisoni/mint-io/frontend/src/reportWebVitals.js":"2","/Users/khushisoni/mint-io/frontend/src/App.js":"3","/Users/khushisoni/mint-io/frontend/src/Redux/ConfigureStore.js":"4","/Users/khushisoni/mint-io/frontend/src/Components/LandingPage/LandingPage.js":"5","/Users/khushisoni/mint-io/frontend/src/Redux/Reducers/example.reducer.js":"6","/Users/khushisoni/mint-io/frontend/src/Components/LandingPage/UpperSection/UpperSection.js":"7","/Users/khushisoni/mint-io/frontend/src/Containers/Home/index.js":"8","/Users/khushisoni/mint-io/frontend/src/Redux/ActionTypes.js":"9","/Users/khushisoni/mint-io/frontend/src/Components/Button/Button.js":"10","/Users/khushisoni/mint-io/frontend/src/Containers/Home/Home.js":"11","/Users/khushisoni/mint-io/frontend/src/Components/Button/index.js":"12","/Users/khushisoni/mint-io/frontend/src/Components/LandingPage/LowerSection/index.js":"13","/Users/khushisoni/mint-io/frontend/src/Components/LandingPage/LowerSection/LowerSection.js":"14","/Users/khushisoni/mint-io/frontend/src/Components/SignInUp/SignUp.js":"15","/Users/khushisoni/mint-io/frontend/src/Components/SignInUp/SignIn.js":"16","/Users/khushisoni/mint-io/frontend/src/firebase.js":"17","/Users/khushisoni/mint-io/frontend/src/Mint.js":"18","/Users/khushisoni/mint-io/frontend/src/Components/Header/Header.js":"19","/Users/khushisoni/mint-io/frontend/src/Components/Widget/Widget.js":"20","/Users/khushisoni/mint-io/frontend/src/Components/Feed/Feed.js":"21","/Users/khushisoni/mint-io/frontend/src/Components/SideBar/SideBar.js":"22","/Users/khushisoni/mint-io/frontend/src/Components/SideBar/SideBarOptions.js":"23","/Users/khushisoni/mint-io/frontend/src/Components/MintBox/MintBox.js":"24","/Users/khushisoni/mint-io/frontend/src/Components/Post/Post.js":"25","/Users/khushisoni/mint-io/frontend/src/Components/Widget/WidgetContent.js":"26","/Users/khushisoni/mint-io/frontend/src/app/store.js":"27","/Users/khushisoni/mint-io/frontend/src/feature/userSlice.js":"28","/Users/khushisoni/mint-io/frontend/src/Components/auth/Login.js":"29"},{"size":1299,"mtime":1657983917935,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1655997473429,"results":"32","hashOfConfig":"31"},{"size":1324,"mtime":1658479656010,"results":"33","hashOfConfig":"31"},{"size":235,"mtime":1655997473428,"results":"34","hashOfConfig":"31"},{"size":338,"mtime":1656416881235,"results":"35","hashOfConfig":"31"},{"size":314,"mtime":1655997473429,"results":"36","hashOfConfig":"31"},{"size":1890,"mtime":1658479604671,"results":"37","hashOfConfig":"31"},{"size":48,"mtime":1655997473428,"results":"38","hashOfConfig":"31"},{"size":47,"mtime":1655997473428,"results":"39","hashOfConfig":"31"},{"size":558,"mtime":1656320682349,"results":"40","hashOfConfig":"31"},{"size":488,"mtime":1655997473427,"results":"41","hashOfConfig":"31"},{"size":54,"mtime":1655997473427,"results":"42","hashOfConfig":"31"},{"size":72,"mtime":1656407094847,"results":"43","hashOfConfig":"31"},{"size":785,"mtime":1656407381374,"results":"44","hashOfConfig":"31"},{"size":0,"mtime":1657023237026,"results":"45","hashOfConfig":"31"},{"size":0,"mtime":1657023283619,"results":"46","hashOfConfig":"31"},{"size":1090,"mtime":1657866368935,"results":"47","hashOfConfig":"31"},{"size":578,"mtime":1657046145536,"results":"48","hashOfConfig":"31"},{"size":7280,"mtime":1658489852966,"results":"49","hashOfConfig":"31"},{"size":377,"mtime":1658567574544,"results":"50","hashOfConfig":"31"},{"size":680,"mtime":1657736070478,"results":"51","hashOfConfig":"31"},{"size":238,"mtime":1657112588112,"results":"52","hashOfConfig":"31"},{"size":2652,"mtime":1658567441582,"results":"53","hashOfConfig":"31"},{"size":511,"mtime":1658058754887,"results":"54","hashOfConfig":"31"},{"size":7774,"mtime":1658482944686,"results":"55","hashOfConfig":"31"},{"size":1352,"mtime":1658567691110,"results":"56","hashOfConfig":"31"},{"size":179,"mtime":1657983821297,"results":"57","hashOfConfig":"31"},{"size":470,"mtime":1657983782098,"results":"58","hashOfConfig":"31"},{"size":708,"mtime":1658045077557,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"1tl0noo",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"63"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"63"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"63"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"63"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"63"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"63"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"/Users/khushisoni/mint-io/frontend/src/index.js",["126","127","128","129","130","131","132"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n\nimport { Provider } from \"react-redux\";\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport LandingPage from \"./Components/LandingPage/LandingPage\";\nimport SignUp from './Components/SignInUp/SignUp';\nimport SignIn from \"./Components/SignInUp/SignIn\";\n\nimport { ConfigureStore } from \"./Redux/ConfigureStore\";\nimport { Route } from 'react-router-dom/cjs/react-router-dom.min';\nimport TimeAgo from 'javascript-time-ago'\nimport store from './app/store';\n\nimport en from 'javascript-time-ago/locale/en.json'\nimport ru from 'javascript-time-ago/locale/ru.json'\n\nTimeAgo.addDefaultLocale(en)\nTimeAgo.addLocale(en)\n\n// const store = ConfigureStore();\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <ThemeProvider theme={globalMUITheme}> */}\n      <Provider store={store}>\n          <App />\n      </Provider>\n    {/* </ThemeProvider> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["133","134"],"/Users/khushisoni/mint-io/frontend/src/reportWebVitals.js",[],"/Users/khushisoni/mint-io/frontend/src/App.js",["135","136","137","138","139"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { BrowserRouter,Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./Containers/Home\";\nimport { login, selectUser } from \"./feature/userSlice\";\nimport Mint from \"./Mint\";\nimport Login from \"./Components/auth/Login\";\nimport { auth } from \"./firebase\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport LandingPage from './Components/LandingPage/LandingPage';\n\nconst App = () => {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    onAuthStateChanged(auth, (authUser) => {\n      if(authUser){\n        dispatch(\n          login({\n          userName: authUser.displayName,\n          photo: authUser.photoURL,\n          email: authUser.email,\n          uid: authUser.uid\n        }))\n        console.log(\"AuthUser\", authUser);\n      }\n    })\n  }, [dispatch])\n    return (\n      // <BrowserRouter>\n      // <Switch>\n      //   <Route exact path=\"/\">\n      //     <Mint/>\n      //   </Route>\n      // </Switch>\n      // </BrowserRouter>\n      <div className=\"App\">\n      {/* {\n        user ? (<Mint/>) : (<Login/>)\n      } */}\n      {\n        user ? (<Mint/>) : (<LandingPage/>)\n      }\n      {/* <Mint/> */}\n        \n      </div>\n    )\n};\n\nexport default App;\n","/Users/khushisoni/mint-io/frontend/src/Redux/ConfigureStore.js",[],"/Users/khushisoni/mint-io/frontend/src/Components/LandingPage/LandingPage.js",[],"/Users/khushisoni/mint-io/frontend/src/Redux/Reducers/example.reducer.js",[],"/Users/khushisoni/mint-io/frontend/src/Components/LandingPage/UpperSection/UpperSection.js",["140","141"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Button from \"../../Button/Button\";\nimport styles from \"./UpperSection.module.css\";\nimport {ReactComponent as Mint} from \"../../../Assets/mnt1.svg\";\nimport {ReactComponent as Logo} from \"../../../Assets/mint.svg\";\nimport {signInWithPopup} from \"firebase/auth\";\nimport { auth, provider } from \"../../../firebase\";\n\nfunction UpperSection() {\n    let history = useHistory();\n\n    const goToSignIn = () => {\n        history.push(\"/signin\");\n    };\n\n    const goToSignUp = () => {\n        history.push(\"/signup\");\n    };\n\n    const handleSubmit = async() => {\n        await signInWithPopup(auth, provider).then((result) => {\n            console.log(result);\n        }).catch((error) => {\n            console.log(error);\n        })\n    }\n\n    return(\n        <div className={styles.Wrapper}>\n        <div className= {styles.LogoWrapper}>\n        <Logo className= {styles.Logo}/>\n        </div>\n\n        <div className={styles.subWrapper}>\n            <div className={styles.LeftSide}>\n                <div className={styles.Heading}>\n                    One platform for all your doubts and queries!\n                </div>\n                <div className= {styles.Buttons}>\n                    {/* <Button\n                    wrapperClass = {styles.ButtonStyle1}\n                    content = \"Sign Up\"\n                    onClick = {goToSignUp}\n                    /> */}\n                    <Button\n                    wrapperClass = {styles.ButtonStyle2}\n                    content = \"Sign In\"\n                    \n                    onClick={handleSubmit}\n                    />\n                </div>\n            </div>\n\n            <div className= {styles.RightSide}>\n                <Mint className = {styles.Mnt} />\n            </div>\n        </div>\n    </div>\n    )\n\n    \n\n\n}\n\nexport default UpperSection;","/Users/khushisoni/mint-io/frontend/src/Containers/Home/index.js",[],"/Users/khushisoni/mint-io/frontend/src/Redux/ActionTypes.js",[],"/Users/khushisoni/mint-io/frontend/src/Components/Button/Button.js",[],"/Users/khushisoni/mint-io/frontend/src/Containers/Home/Home.js",[],"/Users/khushisoni/mint-io/frontend/src/Components/Button/index.js",[],"/Users/khushisoni/mint-io/frontend/src/Components/LandingPage/LowerSection/index.js",[],"/Users/khushisoni/mint-io/frontend/src/Components/LandingPage/LowerSection/LowerSection.js",[],"/Users/khushisoni/mint-io/frontend/src/Components/SignInUp/SignUp.js",[],"/Users/khushisoni/mint-io/frontend/src/Components/SignInUp/SignIn.js",[],"/Users/khushisoni/mint-io/frontend/src/firebase.js",[],"/Users/khushisoni/mint-io/frontend/src/Mint.js",["142"],"import React from 'react'\nimport LandingPageMainSec from './Components/LandingPage/LandingPage'\nimport Header from './Components/Header/Header'\nimport SideBar from './Components/SideBar/SideBar'\nimport Feed from './Components/Feed/Feed'\nimport Widget from './Components/Widget/Widget'\nimport './Mint.css';\n\nfunction Mint() {\n  return (\n    <div className='mint'>\n      <Header/>\n      <div className='mint__contents'>\n        <div className='mint__content'>\n        <SideBar/>\n        <Feed/>\n        <Widget/>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Mint;\n","/Users/khushisoni/mint-io/frontend/src/Components/Header/Header.js",["143"],"import React, {useState} from 'react';\n// import Logo from '../../Assets/mint.svg';\nimport HomeIcon from '@material-ui/icons/Home';\nimport FeaturedPlaylistOutlinedIcon from '@material-ui/icons/FeaturedPlayListOutlined';\nimport AssignmentTurnedInOutlinedIcon from '@material-ui/icons/AssignmentTurnedInOutlined';\nimport PeopleAltOutlinedIcon from '@material-ui/icons/PeopleAltOutlined';\nimport NotificationsOutlinedIcon from '@material-ui/icons/NotificationsOutlined';\nimport Search from '@material-ui/icons/Search';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport './Header.css';\nimport Logo from '@material-ui/icons/ChatBubble';\nimport { Modal } from 'react-responsive-modal';\nimport CloseIcon from '@material-ui/icons/Close';\nimport 'react-responsive-modal/styles.css';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { Input } from '@material-ui/core';\nimport axios from 'axios';\nimport { signOut } from 'firebase/auth';\nimport { auth } from '../../firebase';\nimport { logout, selectUser } from '../../feature/userSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {ReactComponent as LogoMint} from \"../../Assets/mint.svg\";\n\n\nfunction Header() {\n\n    const [isModalOpen,setIsModalOpen] = useState(false);\n    const [inputUrl, setInputUrl] = useState('');\n    const Close = <CloseIcon/>;\n    const [question,setQuestion] = useState(\"\");\n    const dispatch = useDispatch();\n    const user = useSelector(selectUser);\n\n    const handleSubmit = async () => {\n        if(question !== \"\") {\n\n            const config = {\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n            };\n            const body = {\n                questionName: question,\n                questionUrl: inputUrl,\n                user: user\n            }\n            await axios.post(\"/api/questions\",body,config).then((res) => {\n                console.log(res.data);\n                alert(res.data.message)\n                window.location.href = \"/\";\n            }).catch((e) => {\n                console.log(e)\n                alert(\"Error in adding question!\")\n            });\n        }\n    }\n\n    const handleLogout = () => {\n        if(window.confirm(\"Are you sure to logout?\")){\n            signOut(auth).then(() => {\n                dispatch(logout())\n                console.log('logged out')\n            }).catch(() => {\n                console.log(\"error in logout\");\n            })\n        }\n    }\n\n    return (\n        <div className='mHeader'>\n            <div className='mHeader-content'>\n                <div className='mHeader__logo'>\n                    <LogoMint fill=\"white\" className=\"logo__svg\"/>\n                    {/* <img\n            src=\"https://video-public.canva.com/VAD8lt3jPyI/v/ec7205f25c.gif\"\n            alt=\"logo\"\n          /> */}\n                        </div>\n                    <div className='mHeader__icons'>\n                        <div className='mHeader__icon'><HomeIcon /></div>\n                        <div className='mHeader__icon'><FeaturedPlaylistOutlinedIcon /></div>\n                        <div className='mHeader__icon'><AssignmentTurnedInOutlinedIcon /></div>\n                        <div className='mHeader__icon'><PeopleAltOutlinedIcon /></div>\n                        <div className='mHeader__icon'><NotificationsOutlinedIcon /></div>\n                    </div>\n                    <div className='mHeader__input'>\n                        <Search />\n                        <input type=\"text\" placeholder='Search Questions' />\n                    </div>\n                    <div className='mHeader__Rem'>\n                        <span onClick={handleLogout}><Avatar  src={user?.photo}/></span>\n                    </div>\n                    <Button className='mHeader__addQues'\n                    onClick={() => setIsModalOpen(true)} style= {{\n                        color: \"white\",\n                        marginLeft: \"15px\"\n                    }}>Add Question</Button>\n                    <Modal\n                    open = {isModalOpen}\n                    closeIcon = {Close}\n                    onClose = {() => setIsModalOpen(false)}\n                    closeOnEsc \n                    center\n                    closeOnOverlayClick = {false}\n                    style = {{\n                        overlay : {\n                            height: \"auto\",\n                        },\n                    }}\n                    >\n                        <div className='modal__title'>\n                            <h5>Add Question</h5>\n                            <h5>Share Link</h5>\n                        </div>\n                        <div className='modal__info'>\n                            <Avatar src={user?.photo} className='avatar'/>\n                            <div className='modal__scope'>\n                                <PeopleAltOutlinedIcon/>\n                                <p>Public</p>\n                                <ExpandMore/>\n                            </div>\n                        </div>\n                        <div className='modal__field'>\n                            <Input\n                            value = {question}\n                             onChange={(e) => setQuestion(e.target.value)}\n                            type=\"text\" placeholder=\"Start your question with 'what', 'how', 'why', etc.\"\n                                \n                            />\n                            <div style={{\n                                display: \"flex\",\n                                flexDirection: \"column\"\n                            }}>\n                            <input type= 'text'\n                            value={inputUrl}\n                            onChange = {(e) => setInputUrl(e.target.value)}\n                            style={{\n                                margin: \"5px 0\",\n                                border: \"1px solid lightgray\",\n                                padding: \"10px\",\n                                outline: \"2px solid #000\",\n                            }} \n                            placeholder = \"Optional: include a link that gives content\"/>\n                            {\n                                inputUrl !== \"\" &&  <img \n                                style={{\n                                    height: \"40vh\",\n                                    objectFit: \"contain\",\n                                }}\n                                src={inputUrl} alt='displayImage' />\n                            }\n                            </div>\n                        </div> \n                        <div className='modal__buttons'>\n                            <button className='cancel' onClick={() => setIsModalOpen(false)}>\n                                Cancel\n                            </button>\n                            <button\n                            onClick={handleSubmit} \n                            className='add'\n                            type='submit' \n                            >\n                                Add Question\n                            </button>\n                        </div>\n                    </Modal>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;","/Users/khushisoni/mint-io/frontend/src/Components/Widget/Widget.js",[],"/Users/khushisoni/mint-io/frontend/src/Components/Feed/Feed.js",["144"],"import React, { useEffect, useState } from 'react'\nimport MintBox from '../MintBox/MintBox'\nimport Post from '../Post/Post';\nimport Widget from '../Widget/Widget';\nimport './Feed.css';\nimport axios from 'axios';\n\nfunction Feed() {\n  const [posts, setPosts] = useState([])\n  useEffect(() => {\n    axios.get('api/questions').then((res) => {\n      console.log(res.data.reverse());\n      setPosts(res.data);\n    }).catch((e) => {\n      console.log(e);\n    });\n  }, []);\n  return (\n    <div className='feed'>\n        <MintBox/>\n        {\n          posts.map((post, index) => (<Post key= {index} post = {post}/>))\n        }\n        {/* <Post/> */}\n    </div>\n  )\n}\n\nexport default Feed;","/Users/khushisoni/mint-io/frontend/src/Components/SideBar/SideBar.js",[],"/Users/khushisoni/mint-io/frontend/src/Components/SideBar/SideBarOptions.js",[],"/Users/khushisoni/mint-io/frontend/src/Components/MintBox/MintBox.js",[],"/Users/khushisoni/mint-io/frontend/src/Components/Post/Post.js",["145","146","147"],"import { Avatar } from '@material-ui/core';\nimport React, { useState } from 'react'\nimport Button from '../Button';\nimport './Post.css';\nimport ArrowUpwardOutlined from '@material-ui/icons/ArrowUpwardOutlined';\nimport ArrowDownwardOutlined from '@material-ui/icons/ArrowDownwardOutlined';\nimport ReapeatOutlined from '@material-ui/icons/RepeatOutlined';\nimport ChatBubbleOutlined from '@material-ui/icons/ChatBubbleOutlined';\nimport ShareOutlined from '@material-ui/icons/ShareOutlined';\nimport MoreHorizOutlined from '@material-ui/icons/MoreHorizOutlined';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport ReactTimeAgo from 'react-time-ago';\nimport axios from 'axios';\nimport ReactHtmlParser from 'html-react-parser/dist/html-react-parser';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../../feature/userSlice';\n\n\nfunction LastSeen({ date }) {\n    return (\n        <div>\n            Posted <ReactTimeAgo date={date} locale=\"en-US\" timeStyle='twitter' />\n        </div>\n    )\n}\n\n// function parser({value}){\n//     return(\n//         <div>\n//             ReactHtmlParser(value);\n//         </div>\n//     )\n// }\n\nfunction Post({ post }) {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const Close = <CloseIcon />\n    const [answer, setAnswer] = useState(\"\");\n    const user = useSelector(selectUser);\n\n    const handleQuill = (value) => {\n        setAnswer(value)\n    }\n\n    // const parser = (value) => {\n    //     ReactHtmlParser(value);\n    // }\n    //console.log(answer);\n\n    const handleSubmit = async () => {\n        if (post?._id && answer !== \"\") {\n            const config = {\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            }\n            const body = {\n                answer: answer,\n                questionId: post?._id,\n                user: user\n            }\n            await axios.post('/api/answers', body, config).then((res) => {\n                console.log(res.data)\n                alert(\"Answer added successfully\")\n                setIsModalOpen(false);\n                window.location.href = '/'\n            }).catch((e) => {\n                console.log(e);\n            })\n        }\n    }\n\n    return (\n        <div className='post'>\n            <div className='post__info'>\n                <Avatar src={post?.user?.photo}/>\n                <h4>{post?.user?.userName}</h4>\n                <small><LastSeen date={post.createdAt} /></small>\n            </div>\n            <div className='post__body'>\n                <div className='post__question'>\n                    <p>\n                        {post?.questionName}\n                    </p>\n                    <button className='post__btnAnswer' onClick={() => setIsModalOpen(true)}>Answer</button>\n                    <Modal\n                        open={isModalOpen}\n                        closeIcon={Close}\n                        onClose={() => setIsModalOpen(false)}\n                        closeOnEsc\n                        center\n                        closeOnOverlayClick={false}\n                        style={{\n                            overlay: {\n                                height: \"auto\",\n                            },\n                        }}\n                    >\n                        <div className='modal__question'>\n                            <h1>{post?.questionName}</h1>\n                            <p>asked by {\" \"} <span className='name'>{post?.user?.userName}</span> {\" \"} on <span className='name'>{new Date(post?.createdAt).toLocaleString()}</span></p>\n                        </div>\n                        <div className='modal__answer' style={{\n                            width: \"100%\"\n                        }}>\n                            <ReactQuill\n                                placeholder='Enter your answer'\n                                onChange={handleQuill} value={answer}\n                            />\n                        </div>\n                        <div className='modal__button'>\n                            <button className='cancel' onClick={() => setIsModalOpen(false)}>\n                                Cancel\n                            </button>\n                            <button className='add'\n                                type='submit'\n                                onClick={handleSubmit}>\n                                Add Answer\n                            </button>\n                        </div>\n                    </Modal>\n                </div>\n                {post.questionUrl !== \"\" &&\n                    <img src={post.questionUrl} atl='url' />\n                }\n            </div>\n            <div className='post__footer'>\n                <div className='post__footerAction'>\n                    <ArrowUpwardOutlined />\n                    <ArrowDownwardOutlined />\n                </div>\n                <ReapeatOutlined />\n                <ChatBubbleOutlined />\n                <div className='post__footerLeft'>\n                    <ShareOutlined />\n                    <MoreHorizOutlined />\n                </div>\n            </div>\n            <p style={{\n                color: \"rgba(0,0,0,0.5)\",\n                fontSie: \"12px\",\n                fontWeight: \"bold\",\n                margin: \"10px 0\",\n            }}>{post?.allAnswers.length} Answer</p>\n            <div style={{\n                margin: \"5px 0px 0px 0px\",\n                padding: \"5px 0px 0px 20px\",\n                borderTop: \"1px solid lightgray\",\n            }} className='post__answer'>\n                {\n                    post?.allAnswers?.map((_a) => (\n                        <>\n                            <div style={{\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                                width: \"100%\",\n                                padding: \"10px 5px\",\n                                borderTop: \"1px solid lightgray\",\n                            }} className='post-answer-container'>\n\n                                <div style={{\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    marginBottom: \"10px\",\n                                    fontSize: \"12px\",\n                                    fontWeight: 600,\n                                    color: \"#888\"\n                                }} className='post-answered'>\n                                    <Avatar src={_a?.user?.photo}/>\n                                    <div style={{\n                                        margin: \"0px 10px\"\n                                    }} className='post-info'>\n                                        <p>\n                                        {_a?.user?.userName}\n                                        </p>\n                                        <span>\n                                            <LastSeen date={_a?.createdAt} />\n                                        </span>\n                                    </div>\n                                </div>\n                                <div className='post-answer'>\n                                    {/* <p>{ReactHtmlParser(_a?.answer)}</p> */}\n                                    {/* <p><parser value = {_a?.answer}/></p> */}\n                                    <p>{_a?.answer}</p>\n                                </div>\n                            </div>\n                        </>\n                    ))\n                }\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default Post","/Users/khushisoni/mint-io/frontend/src/Components/Widget/WidgetContent.js",[],"/Users/khushisoni/mint-io/frontend/src/app/store.js",[],"/Users/khushisoni/mint-io/frontend/src/feature/userSlice.js",[],"/Users/khushisoni/mint-io/frontend/src/Components/auth/Login.js",[],{"ruleId":"148","severity":1,"message":"149","line":4,"column":27,"nodeType":"150","messageId":"151","endLine":4,"endColumn":33},{"ruleId":"148","severity":1,"message":"152","line":12,"column":8,"nodeType":"150","messageId":"151","endLine":12,"endColumn":19},{"ruleId":"148","severity":1,"message":"153","line":13,"column":8,"nodeType":"150","messageId":"151","endLine":13,"endColumn":14},{"ruleId":"148","severity":1,"message":"154","line":14,"column":8,"nodeType":"150","messageId":"151","endLine":14,"endColumn":14},{"ruleId":"148","severity":1,"message":"155","line":16,"column":10,"nodeType":"150","messageId":"151","endLine":16,"endColumn":24},{"ruleId":"148","severity":1,"message":"156","line":17,"column":10,"nodeType":"150","messageId":"151","endLine":17,"endColumn":15},{"ruleId":"148","severity":1,"message":"157","line":22,"column":8,"nodeType":"150","messageId":"151","endLine":22,"endColumn":10},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"148","severity":1,"message":"162","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":23},{"ruleId":"148","severity":1,"message":"163","line":4,"column":24,"nodeType":"150","messageId":"151","endLine":4,"endColumn":30},{"ruleId":"148","severity":1,"message":"156","line":4,"column":32,"nodeType":"150","messageId":"151","endLine":4,"endColumn":37},{"ruleId":"148","severity":1,"message":"164","line":6,"column":8,"nodeType":"150","messageId":"151","endLine":6,"endColumn":12},{"ruleId":"148","severity":1,"message":"165","line":9,"column":8,"nodeType":"150","messageId":"151","endLine":9,"endColumn":13},{"ruleId":"148","severity":1,"message":"166","line":14,"column":11,"nodeType":"150","messageId":"151","endLine":14,"endColumn":21},{"ruleId":"148","severity":1,"message":"167","line":18,"column":11,"nodeType":"150","messageId":"151","endLine":18,"endColumn":21},{"ruleId":"148","severity":1,"message":"168","line":2,"column":8,"nodeType":"150","messageId":"151","endLine":2,"endColumn":26},{"ruleId":"148","severity":1,"message":"169","line":12,"column":8,"nodeType":"150","messageId":"151","endLine":12,"endColumn":12},{"ruleId":"148","severity":1,"message":"170","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":14},{"ruleId":"148","severity":1,"message":"171","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":14},{"ruleId":"148","severity":1,"message":"172","line":18,"column":8,"nodeType":"150","messageId":"151","endLine":18,"endColumn":23},{"ruleId":"173","severity":1,"message":"174","line":128,"column":21,"nodeType":"175","endLine":128,"endColumn":61},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'LandingPage' is defined but never used.","'SignUp' is defined but never used.","'SignIn' is defined but never used.","'ConfigureStore' is defined but never used.","'Route' is defined but never used.","'ru' is defined but never used.","no-native-reassign",["176"],"no-negated-in-lhs",["177"],"'BrowserRouter' is defined but never used.","'Switch' is defined but never used.","'Home' is defined but never used.","'Login' is defined but never used.","'goToSignIn' is assigned a value but never used.","'goToSignUp' is assigned a value but never used.","'LandingPageMainSec' is defined but never used.","'Logo' is defined but never used.","'Widget' is defined but never used.","'Button' is defined but never used.","'ReactHtmlParser' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]